name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    name: Frontend CI/CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (Frontend)
        working-directory: ./frontend
        run: npm ci

      - name: Run lint (Frontend)
        working-directory: ./frontend
        run: npm run lint

      - name: Run tests (Frontend)
        working-directory: ./frontend
        run: npm test -- --watchAll=false

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Vercel deployment via CLI
      - name: Deploy Frontend to Vercel
        if: github.ref == 'refs/heads/main'
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          vercel --prod --confirm

  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    needs: frontend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js (Backend)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm ci

      - name: Run lint (Backend)
        working-directory: ./backend
        run: npm run lint

      - name: Run tests (Backend)
        working-directory: ./backend
        run: npm test

      # Deployment ke Railway
      - name: Deploy Backend to Railway
        if: github.ref == 'refs/heads/main'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          # Contoh CLI deployment Railway (sesuaikan dengan tools/platform Anda)
          echo "Implementasikan deploy backend sesuai hosting yang dipakai"
